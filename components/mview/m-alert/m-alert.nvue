<!-- 
  buttons: 数组/对象  按钮对象，可以多个 {text: 按钮文字, color: 字体颜色, disable: 是否禁用, autoClose: '是否自动关闭'}
  title: 字符串   提示语
	maskClick 布尔值 点击遮罩是否关闭
  
  EVENT
  click-button  点击按钮  params: {index: 按钮suo索引}
 -->
<template>
  <view>
    <mPopup :show="value" @change="showChange" :maskClick="maskClick">
      <view class="m-alert">
        <view class="title"><text class="title-text">{{title}}</text></view>
        <view class="btn-wrap">
          <view
            class="btn"
            v-for="(item, index) in btnLists"
            :key="index"
            :class="{'last-btn': index == btnLists.length - 1}"
            @click="clickBtn(item, index)"
           ><text class="btn-text" :style="{color: item.color || '#333'}">{{item.text}}</text></view>
        </view>
      </view>
    </mPopup>
  </view>
</template>

<script>
  import mPopup from '../m-popup/m-popup.nvue'
  export default {
    props: {
      buttons: {
        type: [Array, Object],
        default () {
          return {
            text: '确定',
            color: '#333',
            disable: false,
            autoClose: true
          }
        }
      },
      title: {
        type: String,
        default: ''
      },
      value: {
        type: Boolean,
        default: false
      },
			maskClick: {
				type: Boolean,
				default: true
			}
    },
    components: {
      mPopup
    },
    data () {
      return {
        btnLists: []
      }
    },
    created () {
      this.btnLists = Object.prototype.toString.call(this.buttons) === '[object Array]' ?  this.buttons : [this.buttons]
    },
    methods: {
      clickBtn (item, index) {
        if (!item.disable)
        this.$emit('click-button', {item, index})
        if (item.autoClose)
        this.$emit('input', false)
      },
      showChange ({show}) {
        this.$emit('input', show)
      }
    }
  }
</script>

<style scoped>
  .m-alert{
    width: 520upx;
    background-color: #fff;
    border-radius: 4px;
  }
	.title{
/* 	  min-height: 200rpx; */
	  padding: 40px 15px 30px;
	  /* #ifndef APP-PLUS-NVUE */
	  display: flex;
	  /* #endif */
	  align-items: center;
	  justify-content: center;
	}
  .title-text{
    font-size: 14px;
    color: #333;
  }
	.btn-wrap{
	  /* border-top: 1px solid #dcdcdc; */
		border-top-width: 1px;
		border-top-style: solid;
		border-top-color: #DCDCDC;
		flex-direction: row;
	  /* #ifndef APP-PLUS-NVUE */
	  display: flex;
	  /* #endif */
	}
	.btn{
	  flex: 1;
	  height: 42px;
	  /* #ifndef APP-PLUS-NVUE */
	  display: flex;
	  /* #endif */
	  align-items: center;
	  justify-content: center;
	  /* border-right: 1px solid #dcdcdc; */
		border-right-width: 1px;
		border-right-style: solid;
		border-right-color: #DCDCDC;
	}
  .btn-text{
    font-size: 14px;
    color: #333;
  }
	.last-btn{
	  /* border-right: 0; */
		border-right-width: 0;
	}
</style>
